name: PR Slash Commands

# Required permissions for the workflow
permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  issue_comment:
    types: [created]

jobs:
  comment-created:
    runs-on: ubuntu-latest
    steps:
      - name: Set up GitHub token
        id: generate-token
        run: echo "token=${{ github.token }}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: dagger/dagger-for-github@8.0.0
      - name: slash agent
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/agent')
        run: dagger call pull-request-feedback --github-token GH_TOKEN --issue-id ${{ github.event.issue.number }} --feedback "${{ github.event.comment.body }}"
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      - name: slash review
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/review')
        run: dagger call pull-request-review --github-token GH_TOKEN --issue-id ${{ github.event.issue.number }}
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      - name: slash develop
        if: ${{ !github.event.issue.pull_request }} && contains(github.event.comment.body, '/develop')
        run: dagger call develop-pull-request --github-token GH_TOKEN --issue-id ${{ github.event.issue.number }}
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_PAT }}  # Use PAT directly for this step
