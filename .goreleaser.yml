# GoReleaser configuration
before:
  hooks:
    - go mod tidy

builds:
  - main: ./cmd/server/main.go
    binary: "{{ .ProjectName }}"
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: windows
        goarch: arm
    ldflags:
      - -s -w -X main.Version={{.Version}}

archives:
  - format_overrides:
      - goos: windows
        format: zip
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

checksum:
  name_template: "checksums.txt"

# Use simpler snapshot naming to ensure compatibility
snapshot:
  name_template: "next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "^ci:"
      - Merge pull request
      - Merge branch

# Explicitly configure GitHub Releases
release:
  github:
    owner: "{{.Env.GITHUB_REPOSITORY_OWNER}}"
    name: "{{.ProjectName}}"
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}} v{{.Version}}"

# Docker configuration with multi-platform support
docker_manifests:
  - name_template: ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-amd64
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-arm64
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv6
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv7
  - name_template: ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:latest
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-amd64
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-arm64
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv6
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv7

# Common settings for all Docker builds
docker_build_common: &docker_build_common
  dockerfile: Dockerfile
  use: buildx
  extra_files:
    - go.mod
    - go.sum
    - cmd/**/*
    - internal/**/*

# Common labels for all Docker builds
docker_labels: &docker_labels
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"

# Multi-architecture Docker builds
dockers:
  # AMD64 build
  - <<: *docker_build_common
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-amd64
    build_flag_templates:
      - "--platform=linux/amd64"
      - *docker_labels
    goarch: amd64

  # ARM64 build
  - <<: *docker_build_common
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-arm64
    build_flag_templates:
      - "--platform=linux/arm64"
      - *docker_labels
    goarch: arm64

  # ARMv6 build
  - <<: *docker_build_common
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv6
    build_flag_templates:
      - "--platform=linux/arm/v6"
      - *docker_labels
    goarch: arm
    goarm: 6

  # ARMv7 build
  - <<: *docker_build_common
    image_templates:
      - ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/{{.ProjectName}}:{{ .Version }}-armv7
    build_flag_templates:
      - "--platform=linux/arm/v7"
      - *docker_labels
    goarch: arm
    goarm: 7
